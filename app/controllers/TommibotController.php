<?php
class TommibotController {
  private $db;
  public function __construct($conexion){ $this->db = $conexion; }

  public function reply($userId, $message){
    $m = trim(mb_strtolower($message,'UTF-8'));
    // Intents simples por palabras clave
    if ($this->has($m, ['reserv','aula','disponibilidad'])) return $this->faqReservas();
    if ($this->has($m, ['prÃ©stamo','prestamo','equipo','entrega','devoluciÃ³n','devolucion'])) return $this->faqPrestamos();
    if ($this->has($m, ['cambiar','contraseÃ±a','password'])) return $this->faqPassword();
    if ($this->has($m, ['horario','anticipaciÃ³n','anticipacion','dÃ­a','dia'])) return $this->faqReglasTiempo();
    if ($this->has($m, ['historial','mis','estado'])) return $this->faqHistorial();
    if ($this->has($m, ['ayuda','manual','cÃ³mo','como','usar'])) return $this->faqAyuda();

    // Saludos y conversaciÃ³n ligera
    if ($this->has($m, ['hola','buenos dÃ­as','buenas tardes','buenas noches','hey','quÃ© tal','que tal'])) return $this->smallTalkGreeting();
    if ($this->has($m, ['cÃ³mo estÃ¡s','como estas','cÃ³mo te va','que haces','quÃ© haces'])) return $this->smallTalkMood();
    if ($this->has($m, ['quiÃ©n eres','quien eres','tu nombre','cÃ³mo te llamas','como te llamas'])) return 'Soy Tommibot, tu asistente del sistema AIP. Puedo ayudarte con reservas, prÃ©stamos y dudas rÃ¡pidas. ğŸ™‚';
    if ($this->has($m, ['quÃ© hora es','que hora es','hora'])) return $this->tellTime();
    if ($this->has($m, ['quÃ© fecha es','que fecha es','fecha','hoy'])) return $this->tellDate();

    // Preguntas generales: cultura, ciencia (respuestas breves)
    if ($this->has($m, ['quiÃ©n fue','quien fue','quiÃ©n es','quien es','quÃ© es','que es','define','definiciÃ³n'])) return $this->generalShort($m);
    if ($this->has($m, ['dato curioso','sabÃ­as que','sabias que','curiosidad'])) return $this->funFact();

    // Fallback: sugerir chips
    return "No estoy seguro de haber entendido. Puedo ayudarte con: Reservas, PrÃ©stamos, Historial, ContraseÃ±a y Reglas de tiempo. Escribe por ejemplo: 'Â¿CÃ³mo reservo un aula?'";
  }

  private function has($text, $arr){ foreach($arr as $k){ if (mb_strpos($text, $k) !== false) return true; } return false; }

  private function faqReservas(){
    return "Reservas de aula: 1) Ve a Profesor > Reservas. 2) Elige fecha (mÃ­nimo 1 dÃ­a de anticipaciÃ³n). 3) Selecciona aula y hora disponible. 4) Confirma. RecibirÃ¡s un cÃ³digo SMS si aplica. PolÃ­ticas: mÃ¡ximo segÃºn disponibilidad y validar conflictos.";
  }
  private function faqPrestamos(){
    return "PrÃ©stamos de equipos: 1) Ve a Profesor > PrÃ©stamos. 2) Selecciona equipo y horario (mÃ­nimo 1 dÃ­a de anticipaciÃ³n). 3) Al devolver, el encargado registra la devoluciÃ³n y puedes dejar observaciÃ³n. Revisa tu historial para estados.";
  }
  private function faqPassword(){
    return "Cambio de contraseÃ±a: MenÃº > Cambiar contraseÃ±a. Debes ingresar la actual y la nueva. Si olvidaste tu clave, usa Recuperar ContraseÃ±a en el inicio.";
  }
  private function faqReglasTiempo(){
    return "Reglas de tiempo: Las reservas y prÃ©stamos se deben realizar con al menos 1 dÃ­a de anticipaciÃ³n. Los horarios disponibles aparecen en el calendario y evitan conflictos automÃ¡ticamente.";
  }
  private function faqHistorial(){
    return "Historial: MenÃº > Mis Reservas/PrÃ©stamos. Puedes filtrar por fecha y ver estados. Para mÃ¡s detalle, ingresa a cada registro.";
  }
  private function faqAyuda(){
    return "Ayuda rÃ¡pida: â€¢ Reservar un aula â€¢ Pedir prÃ©stamo de laptop â€¢ Ver mi historial â€¢ Cambiar contraseÃ±a. PregÃºntame algo especÃ­fico, por ejemplo: 'Â¿QuÃ© documentos necesito para un prÃ©stamo?'";
  }

  private function smallTalkGreeting(){
    $hour = (int)date('H');
    if ($hour < 12) return 'Â¡Buenos dÃ­as! Â¿En quÃ© te ayudo hoy?';
    if ($hour < 19) return 'Â¡Buenas tardes! Â¿QuÃ© necesitas?';
    return 'Â¡Buenas noches! Â¿CÃ³mo puedo apoyarte?';
  }
  private function smallTalkMood(){
    return 'Â¡Muy bien! AquÃ­ listo para ayudarte con el sistema. Â¿QuÃ© deseas hacer: reservar, pedir prÃ©stamo o consultar algo?';
  }
  private function tellTime(){
    date_default_timezone_set('America/Lima');
    return 'La hora actual es ' . date('H:i') . ' (hora de Lima).';
  }
  private function tellDate(){
    date_default_timezone_set('America/Lima');
    $dias = ['domingo','lunes','martes','miÃ©rcoles','jueves','viernes','sÃ¡bado'];
    $meses = ['enero','febrero','marzo','abril','mayo','junio','julio','agosto','septiembre','octubre','noviembre','diciembre'];
    $d = $dias[(int)date('w')]; $day = (int)date('d'); $m = $meses[(int)date('n')-1]; $y = date('Y');
    return "Hoy es $d, $day de $m de $y.";
  }
  private function generalShort(string $m){
    // Mini glosario muy acotado
    $defs = [
      'fotosÃ­ntesis' => 'La fotosÃ­ntesis es el proceso por el cual las plantas convierten luz en energÃ­a quÃ­mica (glucosa).',
      'gravidad' => 'La gravedad es la fuerza de atracciÃ³n entre cuerpos con masa; mantiene a los planetas en Ã³rbita.',
      'adn' => 'El ADN es el material genÃ©tico que contiene la informaciÃ³n para el desarrollo y funcionamiento de los seres vivos.',
      'internet' => 'Internet es una red global de computadoras que permite intercambiar informaciÃ³n mediante protocolos comunes.',
      'mitosis' => 'La mitosis es el proceso de divisiÃ³n celular que produce dos cÃ©lulas hijas idÃ©nticas.'
    ];
    foreach ($defs as $k => $v){ if (mb_strpos($m, $k) !== false) return $v; }
    return 'Puedo responder dudas bÃ¡sicas de cultura y ciencia. Intenta con: Â¿QuÃ© es la fotosÃ­ntesis? o Â¿QuÃ© es la mitosis?';
  }
  private function funFact(){
    $facts = [
      'Â¿SabÃ­as que las abejas pueden reconocer rostros humanos? Estudios muestran que aprenden patrones visuales complejos.',
      'El corazÃ³n de una ballena azul puede pesar mÃ¡s de 150 kg.',
      'El monte Everest crece unos milÃ­metros cada aÃ±o por el movimiento tectÃ³nico.',
      'Los pulpos tienen tres corazones y sangre azul.',
      'La VÃ­a LÃ¡ctea y AndrÃ³meda colisionarÃ¡n en unos 4 mil millones de aÃ±os.'
    ];
    return $facts[array_rand($facts)];
  }
}
